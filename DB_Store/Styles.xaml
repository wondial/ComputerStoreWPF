<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DB_Store" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <!-- Кнопка свернуть окно -->
    <Style x:Key="TitleBarButtonMinimize" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#2f6aff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка закрыть окно -->
    <Style x:Key="TitleBarButtonClose" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#ff2f2f"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Продажи" -->
    <Style x:Key="LeftMenuButtonSale" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#354052"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#354052"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="0.5" Orientation="Horizontal">
                            <Image Source="Icons/Sale.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#2f3949"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#15a4fa"/>
                            <Setter TargetName="stackPanel" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Продажи" активна -->
    <Style x:Key="LeftMenuButtonSaleActive" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#2f3949"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#15a4fa"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="1" Orientation="Horizontal">
                            <Image Source="Icons/Sale.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Содержимое продаж" -->
    <Style x:Key="LeftMenuButtonRecordsOfSales" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#354052"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#354052"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="0.5" Orientation="Horizontal">
                            <Image Source="Icons/RecordsOfSales.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#2f3949"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#15a4fa"/>
                            <Setter TargetName="stackPanel" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Содержимое продаж" активна -->
    <Style x:Key="LeftMenuButtonRecordsOfSalesActive" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#2f3949"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#15a4fa"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="1" Orientation="Horizontal">
                            <Image Source="Icons/RecordsOfSales.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Заявки" -->
    <Style x:Key="LeftMenuButtonApplication" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#354052"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#354052"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="0.5" Orientation="Horizontal">
                            <Image Source="Icons/Application.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#2f3949"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#15a4fa"/>
                            <Setter TargetName="stackPanel" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Заявки" активна -->
    <Style x:Key="LeftMenuButtonApplicationActive" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#2f3949"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#15a4fa"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="1" Orientation="Horizontal">
                            <Image Source="Icons/Application.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Содержимое заявок" -->
    <Style x:Key="LeftMenuButtonRecords" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#354052"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#354052"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="0.5" Orientation="Horizontal">
                            <Image Source="Icons/Records.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#2f3949"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#15a4fa"/>
                            <Setter TargetName="stackPanel" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Содержимое заявок" активна -->
    <Style x:Key="LeftMenuButtonRecordsActive" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#2f3949"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#15a4fa"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="1" Orientation="Horizontal">
                            <Image Source="Icons/Records.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Заказы" -->
    <Style x:Key="LeftMenuButtonOrders" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#354052"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#354052"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="0.5" Orientation="Horizontal">
                            <Image Source="Icons/Orders.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#2f3949"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#15a4fa"/>
                            <Setter TargetName="stackPanel" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Заказы" активна -->
    <Style x:Key="LeftMenuButtonOrdersActive" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#2f3949"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#15a4fa"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="1" Orientation="Horizontal">
                            <Image Source="Icons/Orders.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Поставки" -->
    <Style x:Key="LeftMenuButtonDelivery" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#354052"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#354052"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="0.5" Orientation="Horizontal">
                            <Image Source="Icons/Delivery.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#2f3949"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#15a4fa"/>
                            <Setter TargetName="stackPanel" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Поставки" активна -->
    <Style x:Key="LeftMenuButtonDeliveryActive" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#2f3949"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#15a4fa"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="1" Orientation="Horizontal">
                            <Image Source="Icons/Delivery.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Склад" -->
    <Style x:Key="LeftMenuButtonStorage" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#354052"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#354052"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="0.5" Orientation="Horizontal">
                            <Image Source="Icons/Storage.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#2f3949"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#15a4fa"/>
                            <Setter TargetName="stackPanel" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Левая кнопка таблицы "Склад" активна -->
    <Style x:Key="LeftMenuButtonStorageActive" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Background" Value="#2f3949"/>
        <Setter Property="BorderThickness" Value="4,0,0,0"/>
        <Setter Property="BorderBrush" Value="#15a4fa"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Opacity="1" Orientation="Horizontal">
                            <Image Source="Icons/Storage.png" Width="16" Height="16" Margin="19,0,12,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#272f3c"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка остальных таблиц -->
    <Style x:Key="TopButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="BorderBrush" Value="#ffffff"/>
        <Setter Property="Foreground" Value="#4e515e"/>
        <Setter Property="BorderThickness" Value="0,0,0,3"/>
        <Setter Property="Padding" Value="15,0,15,0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#f9f9f9"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#15a4fa"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка остальных таблиц активна -->
    <Style x:Key="TopButtonActive" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="#f9f9f9"/>
        <Setter Property="BorderBrush" Value="#15a4fa"/>
        <Setter Property="Foreground" Value="#4e515e"/>
        <Setter Property="BorderThickness" Value="0,0,0,3"/>
        <Setter Property="Padding" Value="15,0,15,0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка для DB -->
    <Style x:Key="WorkButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Background" Value="#15a4fa"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#1289d0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WorkButtonGreen" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Background" Value="#88d969"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#72b658"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка для нового клиента -->
    <Style x:Key="NewClientButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Background" Value="#f3f2f2"/>
        <Setter Property="Foreground" Value="#6f7a8b"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-3,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#15a4fa"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка для обновления DB -->
    <Style x:Key="UpdateButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Background" Value="#88d969"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <StackPanel x:Name="stackPanel" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <Image Source="Icons/Update.png" Width="16" Height="16" Margin="10,0,30,0"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#72b658"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка для отмены -->
    <Style x:Key="CancelButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Background" Value="#bdbdbd"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#aaa9a9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox -->
    <Style x:Key="RightTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="BorderBrush" Value="#6f7a8b"/>
        <Setter Property="Foreground" Value="#3b3f48"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#15a4fa"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#15a4fa"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#6f7a8b"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- LoginTextBox -->
    <Style x:Key="LoginTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="#f0f1f5"/>
        <Setter Property="BorderBrush" Value="#ebecf0"/>
        <Setter Property="Foreground" Value="#3b3f48"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="Padding" Value="20,0,3,0"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="2,2,0,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PasswordBox -->
    <Style x:Key="PasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="#f0f1f5"/>
        <Setter Property="BorderBrush" Value="#ebecf0"/>
        <Setter Property="Foreground" Value="#3b3f48"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="20,0,3,0"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" CornerRadius="0,0,2,2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка для входа -->
    <Style x:Key="LoginButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Background" Value="#15a4fa"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#1289d0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border Background="{TemplateBinding Background}" Height="30" Width="240" CornerRadius="2" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
            <Image HorizontalAlignment="Right" Margin="0,0,8,0" Height="13" Width="13" Source="Icons/Toogle.png"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border Focusable="False" Background="Transparent" Width="210" Height="30">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            x:Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Focusable="false"
                            Background="{TemplateBinding Background}"
                            BorderBrush="#6f7a8b"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                            x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left">
                        </ContentPresenter>
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            Padding="7,0,0,0"
                            Focusable="True"
                            Visibility="Hidden"
                            FontSize="14"
                            Foreground="#3b3f48"
                            IsReadOnly="{TemplateBinding IsReadOnly}">
                        </TextBox>
                        <Popup
                            x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1,0,1,1" Background="#ffffff" BorderBrush="#c9c7cc"/>
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="#15a4fa"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#3b3f48"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="9,3,9,3" SnapsToDevicePixels="true">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#15a4fa"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- DataGrid -->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#6f7e95"/>
        <Setter Property="Padding" Value="7,5,7,5"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="BorderBrush" Value="#7c8ca6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#354052"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#70b8f3"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#70b8f3"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="#ffffff"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>